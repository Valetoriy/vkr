// Постановка задачи
Основная цель дипломной работы - разработать слой аппаратных абстракций (HAL) для
микроконтроллера Mik32 Amur на языке программирования Rust.

Для достижения этой цели были поставлены следующие задачи:
    - Реализовать поддержку основных периферийных модулей микроконтроллера;
    - Обеспечить совместимость с экосистемой embedded-hal (о ней будет сказано позже);
    - Продемонстрировать практическое применение разработанного решения.

// Mikron Mik32 HAL
Основным конкурентом для разработанного слоя аппаратных абстракций является Mikron Mik32
HAL — это официальная библиотека для работы с Mik32 Amur, от компании "Миландр".

Ввиду того, что она реализована на C, присутствуют следующие врождённые недостатки:
    - Отсутствие безопасности работы с памятью
    Переполнения буфера, висячие указатели, гонки данных.
    - Слабая типизация
    Параметры конфигурации передаются как "голые" числа — компилятор не проверяет их валидность.
    Например, можно случайно задать несуществующий режим GPIO.
    - Ручное управление ресурсами
    Нет защиты от некорректного использования регистров.
    Например, использование периферии без инициализации.

// Язык Rust
Для реализации HAL в данной дипломной работе использовался язык Rust.
Rust — современный системный язык программирования, разработанный для безопасности,
производительности и параллелизма. С 2016 года он стабильно занимает 1-е место в рейтинге
самых любимых языков по опросу разработчиков на Stack Overflow, а с 2022 года включён в
ядро Linux и активно используется в таких проектах, как Android, Windows и embedded-системах.

Ключевые преимущества перед C:
    - Безопасность работы с памятью и потоками по умолчанию (система заимствования и владения);
    - Инструментарий (cargo add/build/fmt/doc);
    - Развитие языка (editions).

// Струкрута библиотеки
Разработанная в рамках дипломной работы библиотека подразделяется на 2 части:
1. PAC (Peripheral Access Crate, библиотека доступа к периферии)
    - Низкоуровневая библиотека;
    - Автоматически сгенерирована из .svd файла при помощи инструмента svd2rust;
    - Предоставляет безопасную обёртку над доступом к регистрам периферии.
2. HAL (Hardware Abstraction Layer, слой аппаратных абстракций)
    - Высокоуровневая библиотека;
    - API для корректной настройки периферии;
    - Имплементация интерфейсов embedded-hal.

// Пример работы
(Пример работы GPIO)

// Выводы
Были выполнены следующие задачи:
    - Реализована поддержка основных периферийных модулей микроконтроллера;
    - Имплементированы интерфейсы embedded-hal;
    - Продемонстрировано практическое применение разработанного решения на примере работы GPIO.
